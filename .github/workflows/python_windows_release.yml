name: Release tag on windows

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: debug

jobs:
  create_release: #From: https://jon.sprig.gs/blog/post/2442
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build release
    runs-on: windows-latest
    needs: create_release
    strategy:
          matrix:
            python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create venv
      run: |
        python -m venv venv
        venv/Scripts/activate
        python -m pip install --upgrade pip
        python -m pip install maturin
      working-directory: .

    - name: Set up nightly rust
      run: |
        rustup toolchain install nightly-2023-08-01
        rustup default nightly-2023-08-01

      #openssl-fix from https://stackoverflow.com/a/61921362
    - name: Fix openssl
      run: |
        git clone https://github.com/microsoft/vcpkg
        .\vcpkg\bootstrap-vcpkg.bat
        .\vcpkg\vcpkg install openssl-windows:x64-windows
        .\vcpkg\vcpkg install openssl:x64-windows-static
      working-directory: .

    - name: Build wheels
      run: |
        ../venv/Scripts/activate
        $env:OPENSSL_DIR='D:/a/chrontext/chrontext/vcpkg/installed/x64-windows-static'
        $env:VCPKGRS_DYNAMIC=1
        maturin build
      working-directory: ./py_chrontext

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.create_release.outputs.tag-name }}
        files: |
          ./py_chrontext/target/wheels/*.whl